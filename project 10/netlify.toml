[build]
  # If you DO have a package-lock.json committed, keep npm ci:
  # command = "npm ci && npm run build"
  # If you DO NOT have a package-lock.json, use install instead of ci:
  command = "npm install && npm run build"
  publish = "dist"

[build.environment]
  NODE_VERSION = "20.19.0"
  NETLIFY_BUILD_DEBUG = "true"

# ───────────────────────────────────────────────────────────────────────────────
# Security headers (CSP) – now includes your RUM endpoint AND keeps your APIs
# ───────────────────────────────────────────────────────────────────────────────
[[headers]]
  for = "/*"
  [headers.values]
    Content-Security-Policy = """
      default-src 'self';
      connect-src 'self'
        https://api.stripe.com
        https://*.supabase.co
        https://translation.googleapis.com
        https://api.nasa.gov
        https://ingesteer.services-prod.nsvcs.net;
      img-src 'self' data: blob:
        https://apod.nasa.gov
        https://img.youtube.com
        https://i.ytimg.com;
      media-src 'self' https://apod.nasa.gov https://www.youtube.com https://youtube.com;
      frame-src 'self' https://www.youtube.com https://youtube.com;
      script-src 'self' 'unsafe-inline' 'unsafe-eval';
      style-src 'self' 'unsafe-inline';
      font-src 'self' data:;
    """

# Optional: strip SW caching if you experimented with a PWA service worker
# (this prevents old shells from being served):
[[headers]]
  for = "/service-worker.js"
  [headers.values]
    Cache-Control = "no-store"
